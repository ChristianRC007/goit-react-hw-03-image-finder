{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Container/Container.js","services/apiService.js","App.js","index.js"],"names":["SearchBar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","largeImage","largeImageURL","webformatURL","tags","onClick","updateData","src","alt","ImageGallery","images","map","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Container","children","axios","defaults","baseURL","API_KEY","fetchImages","searchQuery","currentPage","get","then","response","data","App","isLoading","isOpen","seachQuery","onChangeQuery","fetchData","prevState","hits","finally","toggleModal","prevProps","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51a65854.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    largeImage: this.props.largeImageURL,\r\n  };\r\n\r\n  render() {\r\n    const { webformatURL, tags, onClick, updateData } = this.props;\r\n    const { largeImage } = this.state;\r\n\r\n    return (\r\n      <li\r\n        className=\"ImageGalleryItem\"\r\n        onClick={() => {\r\n          onClick();\r\n          updateData(largeImage);\r\n        }}\r\n      >\r\n        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  updateData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onClick, updateData }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ webformatURL, tags, id, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          tags={tags}\r\n          onClick={onClick}\r\n          updateData={updateData}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  updateData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = { onClick: PropTypes.func.isRequired };\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImage} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImage: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"Container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com';\r\nconst API_KEY = '21175244-7c66133e2371767f9955ec31b';\r\n\r\nconst fetchImages = (searchQuery, currentPage = 1) => {\r\n  return axios\r\n    .get(\r\n      `/api/?q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=15&key=${API_KEY}`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Container from './components/Container/Container';\nimport fetchImages from './services/apiService';\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    isOpen: false,\n    currentPage: 1,\n    seachQuery: '',\n    images: [],\n    largeImage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seachQuery !== this.state.seachQuery) {\n      this.fetchData();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({ seachQuery: query, currentPage: 1, images: [] });\n  };\n\n  fetchData = () => {\n    const { seachQuery, currentPage } = this.state;\n\n    this.setState({ isLoading: true });\n    fetchImages(seachQuery, currentPage)\n      .then(response => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n  };\n\n  updateData = largeImage => {\n    this.setState({ largeImage: largeImage });\n  };\n\n  render() {\n    const { images, largeImage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.onChangeQuery} />\n        <ImageGallery\n          images={images}\n          onClick={this.toggleModal}\n          updateData={this.updateData}\n        />\n        <Container>\n          {this.state.isLoading && (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#3f51b5\"\n              height={100}\n              width={100}\n              timeout={3000}\n            />\n          )}\n        </Container>\n        {images.length > 0 && <Button onClick={this.fetchData} />}\n\n        {this.state.isOpen && (\n          <Modal onClose={this.toggleModal} largeImage={largeImage} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}